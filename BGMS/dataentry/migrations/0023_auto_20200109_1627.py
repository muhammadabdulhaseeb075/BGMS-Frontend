# Generated by Django 2.1 on 2020-01-09 16:27
    
from django.db import migrations, connection
from dataentry.utils import add_subcolumns_to_column


def change_grave_number_to_grave_ref(apps, schema_editor):

    if connection.schema_name != 'public':
        Column = apps.get_model("dataentry", "Column")
        
        grave_number_columns = Column.objects.filter(fieldname='grave_number')
        
        if grave_number_columns.exists():
            grave_number_column = grave_number_columns[0]
            grave_number_column.fieldname = 'graveref'
            grave_number_column.save()
        else:
            Table = apps.get_model("dataentry", "Table")
            table = Table.objects.filter(appname='bgsite', modelname='Burial')[0]
            grave_number_column = Column.objects.create(name='Grave Number', fieldname='graveref', 
                                                        table=table, displayname='Grave Number',
                                                        is_subcolumn=False, is_compulsary=False)        

class Migration(migrations.Migration):

    dependencies = [
        ('dataentry', '0022_auto_20190624_1040'),
    ]

    operations = [
        migrations.RunPython(
            code=change_grave_number_to_grave_ref,
            reverse_code=None,
            atomic=True,
        ),
    ]
